- name: Create datomic user.
  user: name="{{ datomic_user }}" state=present
  tags:
    - install

- name: Create datomic directory
  file: state=directory path="{{ datomic_dir }}" owner="{{ datomic_user }}" group="{{ datomic_user }}" mode=755
  tags:
    - install
    
- name: Create datomic data directory
  file: state=directory path="{{ datomic_data_dir }}" owner="{{ datomic_user }}" group="{{ datomic_group }}" mode=755
  tags:
    - install

- name: Make datomic log directory
  file: state=directory path="{{ datomic_log_dir }}" owner="{{ datomic_user }}" group="{{ datomic_group }}" mode=755
  tags:
    - install
  
- name: Check datomic installation
  stat: path="{{ datomic_dir }}/runtime"
  register: datomic_link
  ignore_errors: true
  tags:
    - install

- name: Download datomic
  get_url: url="{{ datomic_download_url }}" dest="{{ datomic_dir }}/{{ datomic_filename }}"
  when: not datomic_link.stat.exists
  tags:
    - install

- name: Install unzip package
  apt: pkg=unzip state=present update-cache=yes
  tags:
    - install
  
- name: Unpack datomic
  unarchive:
    src: "{{ datomic_dir }}/{{ datomic_filename }}"
    dest: "{{ datomic_dir }}"
    remote_src: yes
  when: not datomic_link.stat.exists
  tags:
    - install

- name: Link datomic
  file: src="{{ datomic_dir }}/datomic-free-{{ datomic_version }}"
        dest="{{ datomic_dir }}/runtime"
        owner="{{ datomic_user }}"
        group="{{ datomic_group }}"
        state=link
  when: not datomic_link.stat.exists
  notify: restart datomic
  tags:
    - install
    
- name: datomic dir permissions
  file:
    path: "{{ datomic_dir }}"
    owner: "{{ datomic_user }}"
    group: "{{ datomic_group }}"
    state: directory
    recurse: true
  tags:
    - install

- name: Upload datomic properties file
  template: src=templates/datomic-transactor.properties.j2 dest={{ datomic_dir }}/transactor.properties
  notify: restart datomic
  tags:
    - configure

- name: Upload datomic env config file
  template: src=templates/datomic-env.j2 dest="{{ datomic_env_path }}"
  tags:
    - configure
    
- name: Upload datomic systemd config file
  template: src=templates/datomic.service.j2 dest=/etc/systemd/system/datomic.service
  notify: restart datomic
  tags:
    - configure

- name: Enable datomic systemd
  systemd:
    name: datomic
    enabled: yes
  become: yes
  become_method: sudo
  tags:
    - install

- name: Copy install schemas script
  template: src="{{ clojure_uberjar_webapp_app_install_datomic_schemas_local_path }}" dest="{{ clojure_uberjar_webapp_app_root }}/install-schemas.sh" mode=755
  tags:
    - deploy
    - check
